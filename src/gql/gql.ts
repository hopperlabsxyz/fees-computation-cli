/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 * Learn more about it here: https://the-guild.dev/graphql/codegen/plugins/presets/preset-client#reducing-bundle-size
 */
type Documents = {
    "\n  query VaultEvents(\n    $first: Int!\n    $vaultAddress: Bytes!\n    $fromBlock: BigInt!\n    $toBlock: BigInt!\n    $skip: Int!\n  ) {\n    depositRequests(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      assets\n      blockNumber\n      blockTimestamp\n      id\n      owner\n      sender\n      transactionHash\n      controller\n      requestId\n      vault\n    }\n    redeemRequests(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      blockNumber\n      blockTimestamp\n      id\n      owner\n      sender\n      shares\n      transactionHash\n      controller\n      requestId\n      vault\n    }\n    settleRedeems(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      assetsWithdrawed\n      blockNumber\n      blockTimestamp\n      epochId\n      id\n      settledId\n      sharesBurned\n      totalAssets\n      totalSupply\n      transactionHash\n      vault\n    }\n    settleDeposits(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      assetsDeposited\n      blockNumber\n      blockTimestamp\n      epochId\n      id\n      settledId\n      sharesMinted\n      totalSupply\n      totalAssets\n      transactionHash\n      vault\n    }\n    totalAssetsUpdateds(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      transactionHash\n      totalAssets\n      id\n      blockNumber\n      blockTimestamp\n      vault\n    }\n    newTotalAssetsUpdateds(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      transactionHash\n      totalAssets\n      id\n      blockNumber\n      blockTimestamp\n      vault\n    }\n    transfers(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      blockNumber\n      blockTimestamp\n      from\n      id\n      to\n      transactionHash\n      value\n      vault\n    }\n    depositRequestCanceleds(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      blockNumber\n      blockTimestamp\n      controller\n      id\n      requestId\n      transactionHash\n      vault\n    }\n    deposits(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      id\n      sender\n      owner\n      assets\n      vault\n      transactionHash\n      shares\n      blockTimestamp\n      blockNumber\n    }\n    referrals(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      assets\n      blockNumber\n      blockTimestamp\n      owner\n      referral\n      requestId\n    }\n  }\n": typeof types.VaultEventsDocument,
};
const documents: Documents = {
    "\n  query VaultEvents(\n    $first: Int!\n    $vaultAddress: Bytes!\n    $fromBlock: BigInt!\n    $toBlock: BigInt!\n    $skip: Int!\n  ) {\n    depositRequests(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      assets\n      blockNumber\n      blockTimestamp\n      id\n      owner\n      sender\n      transactionHash\n      controller\n      requestId\n      vault\n    }\n    redeemRequests(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      blockNumber\n      blockTimestamp\n      id\n      owner\n      sender\n      shares\n      transactionHash\n      controller\n      requestId\n      vault\n    }\n    settleRedeems(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      assetsWithdrawed\n      blockNumber\n      blockTimestamp\n      epochId\n      id\n      settledId\n      sharesBurned\n      totalAssets\n      totalSupply\n      transactionHash\n      vault\n    }\n    settleDeposits(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      assetsDeposited\n      blockNumber\n      blockTimestamp\n      epochId\n      id\n      settledId\n      sharesMinted\n      totalSupply\n      totalAssets\n      transactionHash\n      vault\n    }\n    totalAssetsUpdateds(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      transactionHash\n      totalAssets\n      id\n      blockNumber\n      blockTimestamp\n      vault\n    }\n    newTotalAssetsUpdateds(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      transactionHash\n      totalAssets\n      id\n      blockNumber\n      blockTimestamp\n      vault\n    }\n    transfers(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      blockNumber\n      blockTimestamp\n      from\n      id\n      to\n      transactionHash\n      value\n      vault\n    }\n    depositRequestCanceleds(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      blockNumber\n      blockTimestamp\n      controller\n      id\n      requestId\n      transactionHash\n      vault\n    }\n    deposits(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      id\n      sender\n      owner\n      assets\n      vault\n      transactionHash\n      shares\n      blockTimestamp\n      blockNumber\n    }\n    referrals(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      assets\n      blockNumber\n      blockTimestamp\n      owner\n      referral\n      requestId\n    }\n  }\n": types.VaultEventsDocument,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function graphql(source: string): unknown;

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n  query VaultEvents(\n    $first: Int!\n    $vaultAddress: Bytes!\n    $fromBlock: BigInt!\n    $toBlock: BigInt!\n    $skip: Int!\n  ) {\n    depositRequests(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      assets\n      blockNumber\n      blockTimestamp\n      id\n      owner\n      sender\n      transactionHash\n      controller\n      requestId\n      vault\n    }\n    redeemRequests(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      blockNumber\n      blockTimestamp\n      id\n      owner\n      sender\n      shares\n      transactionHash\n      controller\n      requestId\n      vault\n    }\n    settleRedeems(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      assetsWithdrawed\n      blockNumber\n      blockTimestamp\n      epochId\n      id\n      settledId\n      sharesBurned\n      totalAssets\n      totalSupply\n      transactionHash\n      vault\n    }\n    settleDeposits(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      assetsDeposited\n      blockNumber\n      blockTimestamp\n      epochId\n      id\n      settledId\n      sharesMinted\n      totalSupply\n      totalAssets\n      transactionHash\n      vault\n    }\n    totalAssetsUpdateds(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      transactionHash\n      totalAssets\n      id\n      blockNumber\n      blockTimestamp\n      vault\n    }\n    newTotalAssetsUpdateds(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      transactionHash\n      totalAssets\n      id\n      blockNumber\n      blockTimestamp\n      vault\n    }\n    transfers(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      blockNumber\n      blockTimestamp\n      from\n      id\n      to\n      transactionHash\n      value\n      vault\n    }\n    depositRequestCanceleds(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      blockNumber\n      blockTimestamp\n      controller\n      id\n      requestId\n      transactionHash\n      vault\n    }\n    deposits(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      id\n      sender\n      owner\n      assets\n      vault\n      transactionHash\n      shares\n      blockTimestamp\n      blockNumber\n    }\n    referrals(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      assets\n      blockNumber\n      blockTimestamp\n      owner\n      referral\n      requestId\n    }\n  }\n"): (typeof documents)["\n  query VaultEvents(\n    $first: Int!\n    $vaultAddress: Bytes!\n    $fromBlock: BigInt!\n    $toBlock: BigInt!\n    $skip: Int!\n  ) {\n    depositRequests(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      assets\n      blockNumber\n      blockTimestamp\n      id\n      owner\n      sender\n      transactionHash\n      controller\n      requestId\n      vault\n    }\n    redeemRequests(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      blockNumber\n      blockTimestamp\n      id\n      owner\n      sender\n      shares\n      transactionHash\n      controller\n      requestId\n      vault\n    }\n    settleRedeems(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      assetsWithdrawed\n      blockNumber\n      blockTimestamp\n      epochId\n      id\n      settledId\n      sharesBurned\n      totalAssets\n      totalSupply\n      transactionHash\n      vault\n    }\n    settleDeposits(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      assetsDeposited\n      blockNumber\n      blockTimestamp\n      epochId\n      id\n      settledId\n      sharesMinted\n      totalSupply\n      totalAssets\n      transactionHash\n      vault\n    }\n    totalAssetsUpdateds(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      transactionHash\n      totalAssets\n      id\n      blockNumber\n      blockTimestamp\n      vault\n    }\n    newTotalAssetsUpdateds(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      transactionHash\n      totalAssets\n      id\n      blockNumber\n      blockTimestamp\n      vault\n    }\n    transfers(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      blockNumber\n      blockTimestamp\n      from\n      id\n      to\n      transactionHash\n      value\n      vault\n    }\n    depositRequestCanceleds(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      blockNumber\n      blockTimestamp\n      controller\n      id\n      requestId\n      transactionHash\n      vault\n    }\n    deposits(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      id\n      sender\n      owner\n      assets\n      vault\n      transactionHash\n      shares\n      blockTimestamp\n      blockNumber\n    }\n    referrals(\n      first: $first\n      skip: $skip\n      orderBy: blockTimestamp\n      orderDirection: desc\n      where: {\n        vault: $vaultAddress\n        blockNumber_gte: $fromBlock\n        blockNumber_lt: $toBlock\n      }\n    ) {\n      assets\n      blockNumber\n      blockTimestamp\n      owner\n      referral\n      requestId\n    }\n  }\n"];

export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;